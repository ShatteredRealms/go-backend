syntax = "proto3";
package sro.characters;
option go_package = "pkg/pb";

import "sro/globals.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service CharactersService {
  rpc GetGenders(google.protobuf.Empty) returns (Genders) {
    option (google.api.http) = {
      get : "/v1/genders"
    };
  }

  rpc GetRealms(google.protobuf.Empty) returns (Realms) {
    option (google.api.http) = {
      get : "/v1/realms"
    };
  }

  rpc GetCharacters(google.protobuf.Empty) returns (CharactersResponse) {
    option (google.api.http) = {
      get : "/v1/characters"
    };
  }

  rpc GetCharacter(CharacterTarget) returns (CharacterResponse) {
    option (google.api.http) = {
      get : "/v1/characters/id/{id}"
      additional_bindings : {get : "/v1/characters/name/{name}"}
    };
  }

  rpc CreateCharacter(CreateCharacterRequest) returns (CharacterResponse) {
    option (google.api.http) = {
      post : "/v1/users/id/{owner.id}/characters"
      body : "*"
      additional_bindings : {
        post : "/v1/users/name/{owner.username}/characters"
        body : "*"
      }
    };
  }

  rpc DeleteCharacter(CharacterTarget) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/characters/id/{id}"
      additional_bindings : {delete : "/v1/characters/name/{name}"}
    };
  }

  rpc GetAllCharactersForUser(sro.UserTarget) returns (CharactersResponse) {
    option (google.api.http) = {
      get : "/v1/users/id/{id}/characters"
      additional_bindings : {get : "/v1/users/username/{username}/characters"}
    };
  }

  rpc EditCharacter(EditCharacterRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/v1/characters/id/{target.id}"
      body : "*"
      additional_bindings : {
        put : "/v1/characters/name/{target.name}"
        body : "*"
      }
    };
  }

  // Adds the given amount of playtime to the character and returns the total
  // playtime
  rpc AddCharacterPlayTime(AddPlayTimeRequest) returns (PlayTimeResponse) {
    option (google.api.http) = {
      put : "/v1/characters/id/{character.id}/playtime"
      body : "*"
      additional_bindings : {
        put : "/v1/characters/name/{character.name}/playtime"
        body : "*"
      }
    };
  }
}

message PlayTimeResponse { uint64 time = 1; }

message AddPlayTimeRequest {
  CharacterTarget character = 1;
  uint64 time = 2;
}

message CreateCharacterRequest {
  sro.UserTarget owner = 1;
  string name = 2;
  string gender = 3;
  string realm = 4;
}

message CharacterTarget {
  oneof target {
    uint64 id = 1;
    string name = 2;
  }
}

message EditCharacterRequest {
  CharacterTarget target = 1;

  // The user id that owns the character
  optional string owner_id = 3;
  optional string new_name = 4;
  optional string gender = 5;
  optional string realm = 6;

  optional uint64 play_time = 7;

  optional Location location = 8;
}

message CharacterResponse {
  uint64 id = 1;
  string owner = 2;
  string name = 3;
  string gender = 4;
  string realm = 5;
  uint64 play_time = 6;
  Location location = 8;
}

message Location {
  string world = 1;
  float x = 2;
  float y = 3;
  float z = 4;
}

message CharactersResponse { repeated CharacterResponse characters = 1; }

message Gender { string name = 1; }

message Realm { string name = 1; }

message Genders { repeated Gender genders = 1; }

message Realms { repeated Realm realms = 1; }
