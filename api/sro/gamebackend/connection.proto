syntax = "proto3";
package sro.gamebackend;
option go_package = "pkg/pb";

import "google/api/annotations.proto";
import "sro/character/character.proto";
import "sro/globals.proto";

service ConnectionService {
  rpc ConnectGameServer(sro.character.CharacterTarget)
      returns (ConnectGameServerResponse) {
    option (google.api.http) = {
      get : "/v1/connect/character/id/{id}"
      additional_bindings : {get : "/v1/connect/character/name/{name}"}
    };
  }

  rpc VerifyConnect(VerifyConnectRequest)
      returns (sro.character.CharacterDetails) {
    option (google.api.http) = {
      post : "/v1/connect/verify"
      body : "*"
    };
  }

  rpc TransferPlayer(TransferPlayerRequest)
      returns (ConnectGameServerResponse) {
    option (google.api.http) = {
      post : "/v1/transfer"
      body : "*"
    };
  }

  rpc IsPlaying(sro.character.CharacterTarget) returns (ConnectionStatus) {
    option (google.api.http) = {
      get : "/v1/status/character/id/{id}"
      additional_bindings : {get : "/v1/status/character/name/{name}"}
    };
  }
}

message ConnectGameServerResponse {
  string address = 1;
  uint32 port = 2;
  string connection_id = 3;
}

message VerifyConnectRequest {
  string connection_id = 1;
  string server_name = 2;
}

message ConnectionStatus { bool online = 1; }

message TransferPlayerRequest {
  string character = 1;
  sro.Location location = 2;
}
