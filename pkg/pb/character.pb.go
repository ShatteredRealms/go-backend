// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.15.8
// source: sro/character/character.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time uint64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PlayTimeResponse) Reset() {
	*x = PlayTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sro_character_character_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayTimeResponse) ProtoMessage() {}

func (x *PlayTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayTimeResponse.ProtoReflect.Descriptor instead.
func (*PlayTimeResponse) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{0}
}

func (x *PlayTimeResponse) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type AddPlayTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character *CharacterTarget `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
	Time      uint64           `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AddPlayTimeRequest) Reset() {
	*x = AddPlayTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sro_character_character_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlayTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayTimeRequest) ProtoMessage() {}

func (x *AddPlayTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayTimeRequest.ProtoReflect.Descriptor instead.
func (*AddPlayTimeRequest) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{1}
}

func (x *AddPlayTimeRequest) GetCharacter() *CharacterTarget {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *AddPlayTimeRequest) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type CreateCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner  *UserTarget `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Name   string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Gender string      `protobuf:"bytes,3,opt,name=gender,proto3" json:"gender,omitempty"`
	Realm  string      `protobuf:"bytes,4,opt,name=realm,proto3" json:"realm,omitempty"`
}

func (x *CreateCharacterRequest) Reset() {
	*x = CreateCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sro_character_character_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacterRequest) ProtoMessage() {}

func (x *CreateCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacterRequest.ProtoReflect.Descriptor instead.
func (*CreateCharacterRequest) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCharacterRequest) GetOwner() *UserTarget {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *CreateCharacterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCharacterRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CreateCharacterRequest) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

type CharacterTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*CharacterTarget_Id
	//	*CharacterTarget_Name
	Type isCharacterTarget_Type `protobuf_oneof:"type"`
}

func (x *CharacterTarget) Reset() {
	*x = CharacterTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sro_character_character_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterTarget) ProtoMessage() {}

func (x *CharacterTarget) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterTarget.ProtoReflect.Descriptor instead.
func (*CharacterTarget) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{3}
}

func (m *CharacterTarget) GetType() isCharacterTarget_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *CharacterTarget) GetId() uint64 {
	if x, ok := x.GetType().(*CharacterTarget_Id); ok {
		return x.Id
	}
	return 0
}

func (x *CharacterTarget) GetName() string {
	if x, ok := x.GetType().(*CharacterTarget_Name); ok {
		return x.Name
	}
	return ""
}

type isCharacterTarget_Type interface {
	isCharacterTarget_Type()
}

type CharacterTarget_Id struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type CharacterTarget_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*CharacterTarget_Id) isCharacterTarget_Type() {}

func (*CharacterTarget_Name) isCharacterTarget_Type() {}

type EditCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *CharacterTarget `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// The user id that owns the character
	//
	// Types that are assignable to OptionalOwnerId:
	//
	//	*EditCharacterRequest_OwnerId
	OptionalOwnerId isEditCharacterRequest_OptionalOwnerId `protobuf_oneof:"optional_owner_id"`
	// Types that are assignable to OptionalNewName:
	//
	//	*EditCharacterRequest_NewName
	OptionalNewName isEditCharacterRequest_OptionalNewName `protobuf_oneof:"optional_new_name"`
	// Types that are assignable to OptionalGender:
	//
	//	*EditCharacterRequest_Gender
	OptionalGender isEditCharacterRequest_OptionalGender `protobuf_oneof:"optional_gender"`
	// Types that are assignable to OptionalRealm:
	//
	//	*EditCharacterRequest_Realm
	OptionalRealm isEditCharacterRequest_OptionalRealm `protobuf_oneof:"optional_realm"`
	// Types that are assignable to OptionalPlayTime:
	//
	//	*EditCharacterRequest_PlayTime
	OptionalPlayTime isEditCharacterRequest_OptionalPlayTime `protobuf_oneof:"optional_play_time"`
	// Types that are assignable to OptionalLocation:
	//
	//	*EditCharacterRequest_Location
	OptionalLocation isEditCharacterRequest_OptionalLocation `protobuf_oneof:"optional_location"`
}

func (x *EditCharacterRequest) Reset() {
	*x = EditCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sro_character_character_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCharacterRequest) ProtoMessage() {}

func (x *EditCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCharacterRequest.ProtoReflect.Descriptor instead.
func (*EditCharacterRequest) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{4}
}

func (x *EditCharacterRequest) GetTarget() *CharacterTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (m *EditCharacterRequest) GetOptionalOwnerId() isEditCharacterRequest_OptionalOwnerId {
	if m != nil {
		return m.OptionalOwnerId
	}
	return nil
}

func (x *EditCharacterRequest) GetOwnerId() string {
	if x, ok := x.GetOptionalOwnerId().(*EditCharacterRequest_OwnerId); ok {
		return x.OwnerId
	}
	return ""
}

func (m *EditCharacterRequest) GetOptionalNewName() isEditCharacterRequest_OptionalNewName {
	if m != nil {
		return m.OptionalNewName
	}
	return nil
}

func (x *EditCharacterRequest) GetNewName() string {
	if x, ok := x.GetOptionalNewName().(*EditCharacterRequest_NewName); ok {
		return x.NewName
	}
	return ""
}

func (m *EditCharacterRequest) GetOptionalGender() isEditCharacterRequest_OptionalGender {
	if m != nil {
		return m.OptionalGender
	}
	return nil
}

func (x *EditCharacterRequest) GetGender() string {
	if x, ok := x.GetOptionalGender().(*EditCharacterRequest_Gender); ok {
		return x.Gender
	}
	return ""
}

func (m *EditCharacterRequest) GetOptionalRealm() isEditCharacterRequest_OptionalRealm {
	if m != nil {
		return m.OptionalRealm
	}
	return nil
}

func (x *EditCharacterRequest) GetRealm() string {
	if x, ok := x.GetOptionalRealm().(*EditCharacterRequest_Realm); ok {
		return x.Realm
	}
	return ""
}

func (m *EditCharacterRequest) GetOptionalPlayTime() isEditCharacterRequest_OptionalPlayTime {
	if m != nil {
		return m.OptionalPlayTime
	}
	return nil
}

func (x *EditCharacterRequest) GetPlayTime() uint64 {
	if x, ok := x.GetOptionalPlayTime().(*EditCharacterRequest_PlayTime); ok {
		return x.PlayTime
	}
	return 0
}

func (m *EditCharacterRequest) GetOptionalLocation() isEditCharacterRequest_OptionalLocation {
	if m != nil {
		return m.OptionalLocation
	}
	return nil
}

func (x *EditCharacterRequest) GetLocation() *Location {
	if x, ok := x.GetOptionalLocation().(*EditCharacterRequest_Location); ok {
		return x.Location
	}
	return nil
}

type isEditCharacterRequest_OptionalOwnerId interface {
	isEditCharacterRequest_OptionalOwnerId()
}

type EditCharacterRequest_OwnerId struct {
	OwnerId string `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3,oneof"`
}

func (*EditCharacterRequest_OwnerId) isEditCharacterRequest_OptionalOwnerId() {}

type isEditCharacterRequest_OptionalNewName interface {
	isEditCharacterRequest_OptionalNewName()
}

type EditCharacterRequest_NewName struct {
	NewName string `protobuf:"bytes,4,opt,name=new_name,json=newName,proto3,oneof"`
}

func (*EditCharacterRequest_NewName) isEditCharacterRequest_OptionalNewName() {}

type isEditCharacterRequest_OptionalGender interface {
	isEditCharacterRequest_OptionalGender()
}

type EditCharacterRequest_Gender struct {
	Gender string `protobuf:"bytes,5,opt,name=gender,proto3,oneof"`
}

func (*EditCharacterRequest_Gender) isEditCharacterRequest_OptionalGender() {}

type isEditCharacterRequest_OptionalRealm interface {
	isEditCharacterRequest_OptionalRealm()
}

type EditCharacterRequest_Realm struct {
	Realm string `protobuf:"bytes,6,opt,name=realm,proto3,oneof"`
}

func (*EditCharacterRequest_Realm) isEditCharacterRequest_OptionalRealm() {}

type isEditCharacterRequest_OptionalPlayTime interface {
	isEditCharacterRequest_OptionalPlayTime()
}

type EditCharacterRequest_PlayTime struct {
	PlayTime uint64 `protobuf:"varint,7,opt,name=play_time,json=playTime,proto3,oneof"`
}

func (*EditCharacterRequest_PlayTime) isEditCharacterRequest_OptionalPlayTime() {}

type isEditCharacterRequest_OptionalLocation interface {
	isEditCharacterRequest_OptionalLocation()
}

type EditCharacterRequest_Location struct {
	Location *Location `protobuf:"bytes,8,opt,name=location,proto3,oneof"`
}

func (*EditCharacterRequest_Location) isEditCharacterRequest_OptionalLocation() {}

type CharacterDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner    string    `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Name     string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Gender   string    `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Realm    string    `protobuf:"bytes,5,opt,name=realm,proto3" json:"realm,omitempty"`
	PlayTime uint64    `protobuf:"varint,6,opt,name=play_time,json=playTime,proto3" json:"play_time,omitempty"`
	Location *Location `protobuf:"bytes,8,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *CharacterDetails) Reset() {
	*x = CharacterDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sro_character_character_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterDetails) ProtoMessage() {}

func (x *CharacterDetails) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterDetails.ProtoReflect.Descriptor instead.
func (*CharacterDetails) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{5}
}

func (x *CharacterDetails) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CharacterDetails) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CharacterDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterDetails) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CharacterDetails) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *CharacterDetails) GetPlayTime() uint64 {
	if x != nil {
		return x.PlayTime
	}
	return 0
}

func (x *CharacterDetails) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type CharactersDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters []*CharacterDetails `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *CharactersDetails) Reset() {
	*x = CharactersDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sro_character_character_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharactersDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharactersDetails) ProtoMessage() {}

func (x *CharactersDetails) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharactersDetails.ProtoReflect.Descriptor instead.
func (*CharactersDetails) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{6}
}

func (x *CharactersDetails) GetCharacters() []*CharacterDetails {
	if x != nil {
		return x.Characters
	}
	return nil
}

type InventoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Item id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Slot number to place item
	Slot uint32 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	// Number of the items in the slot
	Quantity uint64 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *InventoryItem) Reset() {
	*x = InventoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sro_character_character_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItem) ProtoMessage() {}

func (x *InventoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItem.ProtoReflect.Descriptor instead.
func (*InventoryItem) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{7}
}

func (x *InventoryItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InventoryItem) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *InventoryItem) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type Inventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InventoryItems []*InventoryItem `protobuf:"bytes,1,rep,name=inventory_items,json=inventoryItems,proto3" json:"inventory_items,omitempty"`
	BankItems      []*InventoryItem `protobuf:"bytes,2,rep,name=bank_items,json=bankItems,proto3" json:"bank_items,omitempty"`
}

func (x *Inventory) Reset() {
	*x = Inventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sro_character_character_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inventory) ProtoMessage() {}

func (x *Inventory) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inventory.ProtoReflect.Descriptor instead.
func (*Inventory) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{8}
}

func (x *Inventory) GetInventoryItems() []*InventoryItem {
	if x != nil {
		return x.InventoryItems
	}
	return nil
}

func (x *Inventory) GetBankItems() []*InventoryItem {
	if x != nil {
		return x.BankItems
	}
	return nil
}

type UpdateInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target         *CharacterTarget `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	InventoryItems []*InventoryItem `protobuf:"bytes,2,rep,name=inventory_items,json=inventoryItems,proto3" json:"inventory_items,omitempty"`
	BankItems      []*InventoryItem `protobuf:"bytes,3,rep,name=bank_items,json=bankItems,proto3" json:"bank_items,omitempty"`
}

func (x *UpdateInventoryRequest) Reset() {
	*x = UpdateInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sro_character_character_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryRequest) ProtoMessage() {}

func (x *UpdateInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateInventoryRequest) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateInventoryRequest) GetTarget() *CharacterTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *UpdateInventoryRequest) GetInventoryItems() []*InventoryItem {
	if x != nil {
		return x.InventoryItems
	}
	return nil
}

func (x *UpdateInventoryRequest) GetBankItems() []*InventoryItem {
	if x != nil {
		return x.BankItems
	}
	return nil
}

var File_sro_character_character_proto protoreflect.FileDescriptor

var file_sro_character_character_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x72, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2f,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x72, 0x6f, 0x2f, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x10,
	0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d,
	0x22, 0x41, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x80, 0x03, 0x0a, 0x14, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73,
	0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d,
	0x12, 0x1d, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x2b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x13, 0x0a, 0x11,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x42, 0x13, 0x0a, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x65,
	0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x42, 0x14, 0x0a, 0x12, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x13, 0x0a, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x11, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x4f, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x45, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x72, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x72,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3b,
	0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x32, 0xa7, 0x0b, 0x0a, 0x10,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x61, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x73, 0x72, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x16, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x8d, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x5a, 0x1c, 0x12,
	0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f,
	0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x16, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0xb9, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x58, 0x3a, 0x01, 0x2a, 0x5a, 0x2f, 0x3a, 0x01, 0x2a, 0x22,
	0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x2f,
	0x7b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x22, 0x22, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x2e, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x87, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x36, 0x5a, 0x1c, 0x2a, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x2a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9e, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x46, 0x6f,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4a,
	0x5a, 0x2a, 0x12, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x9e, 0x01, 0x0a, 0x0d, 0x45,
	0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73,
	0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x4a, 0x3a, 0x01, 0x2a, 0x5a, 0x26, 0x3a, 0x01, 0x2a, 0x1a, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x1a, 0x1d, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64, 0x2f,
	0x7b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x69, 0x64, 0x7d, 0x12, 0xc4, 0x01, 0x0a, 0x14,
	0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x62,
	0x3a, 0x01, 0x2a, 0x5a, 0x32, 0x3a, 0x01, 0x2a, 0x1a, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x70,
	0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x50, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x4a, 0x5a, 0x26, 0x12, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0xb3, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x25, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5e, 0x3a, 0x01, 0x2a, 0x5a, 0x30, 0x3a, 0x01, 0x2a, 0x22,
	0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f,
	0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x27, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64, 0x2f,
	0x7b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sro_character_character_proto_rawDescOnce sync.Once
	file_sro_character_character_proto_rawDescData = file_sro_character_character_proto_rawDesc
)

func file_sro_character_character_proto_rawDescGZIP() []byte {
	file_sro_character_character_proto_rawDescOnce.Do(func() {
		file_sro_character_character_proto_rawDescData = protoimpl.X.CompressGZIP(file_sro_character_character_proto_rawDescData)
	})
	return file_sro_character_character_proto_rawDescData
}

var file_sro_character_character_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_sro_character_character_proto_goTypes = []interface{}{
	(*PlayTimeResponse)(nil),       // 0: sro.character.PlayTimeResponse
	(*AddPlayTimeRequest)(nil),     // 1: sro.character.AddPlayTimeRequest
	(*CreateCharacterRequest)(nil), // 2: sro.character.CreateCharacterRequest
	(*CharacterTarget)(nil),        // 3: sro.character.CharacterTarget
	(*EditCharacterRequest)(nil),   // 4: sro.character.EditCharacterRequest
	(*CharacterDetails)(nil),       // 5: sro.character.CharacterDetails
	(*CharactersDetails)(nil),      // 6: sro.character.CharactersDetails
	(*InventoryItem)(nil),          // 7: sro.character.InventoryItem
	(*Inventory)(nil),              // 8: sro.character.Inventory
	(*UpdateInventoryRequest)(nil), // 9: sro.character.UpdateInventoryRequest
	(*UserTarget)(nil),             // 10: sro.UserTarget
	(*Location)(nil),               // 11: sro.Location
	(*emptypb.Empty)(nil),          // 12: google.protobuf.Empty
}
var file_sro_character_character_proto_depIdxs = []int32{
	3,  // 0: sro.character.AddPlayTimeRequest.character:type_name -> sro.character.CharacterTarget
	10, // 1: sro.character.CreateCharacterRequest.owner:type_name -> sro.UserTarget
	3,  // 2: sro.character.EditCharacterRequest.target:type_name -> sro.character.CharacterTarget
	11, // 3: sro.character.EditCharacterRequest.location:type_name -> sro.Location
	11, // 4: sro.character.CharacterDetails.location:type_name -> sro.Location
	5,  // 5: sro.character.CharactersDetails.characters:type_name -> sro.character.CharacterDetails
	7,  // 6: sro.character.Inventory.inventory_items:type_name -> sro.character.InventoryItem
	7,  // 7: sro.character.Inventory.bank_items:type_name -> sro.character.InventoryItem
	3,  // 8: sro.character.UpdateInventoryRequest.target:type_name -> sro.character.CharacterTarget
	7,  // 9: sro.character.UpdateInventoryRequest.inventory_items:type_name -> sro.character.InventoryItem
	7,  // 10: sro.character.UpdateInventoryRequest.bank_items:type_name -> sro.character.InventoryItem
	12, // 11: sro.character.CharacterService.GetCharacters:input_type -> google.protobuf.Empty
	3,  // 12: sro.character.CharacterService.GetCharacter:input_type -> sro.character.CharacterTarget
	2,  // 13: sro.character.CharacterService.CreateCharacter:input_type -> sro.character.CreateCharacterRequest
	3,  // 14: sro.character.CharacterService.DeleteCharacter:input_type -> sro.character.CharacterTarget
	10, // 15: sro.character.CharacterService.GetAllCharactersForUser:input_type -> sro.UserTarget
	4,  // 16: sro.character.CharacterService.EditCharacter:input_type -> sro.character.EditCharacterRequest
	1,  // 17: sro.character.CharacterService.AddCharacterPlayTime:input_type -> sro.character.AddPlayTimeRequest
	3,  // 18: sro.character.CharacterService.GetInventory:input_type -> sro.character.CharacterTarget
	9,  // 19: sro.character.CharacterService.SetInventory:input_type -> sro.character.UpdateInventoryRequest
	6,  // 20: sro.character.CharacterService.GetCharacters:output_type -> sro.character.CharactersDetails
	5,  // 21: sro.character.CharacterService.GetCharacter:output_type -> sro.character.CharacterDetails
	5,  // 22: sro.character.CharacterService.CreateCharacter:output_type -> sro.character.CharacterDetails
	12, // 23: sro.character.CharacterService.DeleteCharacter:output_type -> google.protobuf.Empty
	6,  // 24: sro.character.CharacterService.GetAllCharactersForUser:output_type -> sro.character.CharactersDetails
	12, // 25: sro.character.CharacterService.EditCharacter:output_type -> google.protobuf.Empty
	0,  // 26: sro.character.CharacterService.AddCharacterPlayTime:output_type -> sro.character.PlayTimeResponse
	8,  // 27: sro.character.CharacterService.GetInventory:output_type -> sro.character.Inventory
	12, // 28: sro.character.CharacterService.SetInventory:output_type -> google.protobuf.Empty
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_sro_character_character_proto_init() }
func file_sro_character_character_proto_init() {
	if File_sro_character_character_proto != nil {
		return
	}
	file_sro_globals_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sro_character_character_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sro_character_character_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlayTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sro_character_character_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sro_character_character_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sro_character_character_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sro_character_character_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sro_character_character_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharactersDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sro_character_character_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sro_character_character_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sro_character_character_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sro_character_character_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*CharacterTarget_Id)(nil),
		(*CharacterTarget_Name)(nil),
	}
	file_sro_character_character_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*EditCharacterRequest_OwnerId)(nil),
		(*EditCharacterRequest_NewName)(nil),
		(*EditCharacterRequest_Gender)(nil),
		(*EditCharacterRequest_Realm)(nil),
		(*EditCharacterRequest_PlayTime)(nil),
		(*EditCharacterRequest_Location)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sro_character_character_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sro_character_character_proto_goTypes,
		DependencyIndexes: file_sro_character_character_proto_depIdxs,
		MessageInfos:      file_sro_character_character_proto_msgTypes,
	}.Build()
	File_sro_character_character_proto = out.File
	file_sro_character_character_proto_rawDesc = nil
	file_sro_character_character_proto_goTypes = nil
	file_sro_character_character_proto_depIdxs = nil
}
