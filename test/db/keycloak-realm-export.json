{
  "id": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
  "realm": "default",
  "displayName": "Shattered Realms Online",
  "displayNameHtml": "",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 901,
  "ssoSessionIdleTimeout": 1801,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": true,
  "loginWithEmailAllowed": false,
  "duplicateEmailsAllowed": true,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": true,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 10,
  "roles": {
    "realm": [
      {
        "id": "586f9daf-90b7-490d-81aa-030e36644602",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
        "attributes": {}
      },
      {
        "id": "6968b9b4-a778-424e-8bcf-35131f4d620f",
        "name": "public",
        "description": "Role given to all users",
        "composite": true,
        "composites": {
          "client": {
            "account": [
              "delete-account",
              "view-applications",
              "manage-account-links",
              "view-groups",
              "view-consent",
              "manage-account",
              "view-profile",
              "manage-consent"
            ]
          }
        },
        "clientRole": false,
        "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
        "attributes": {}
      },
      {
        "id": "d6fbd3c7-0b95-4ea4-8a3b-fa29a3e9a461",
        "name": "admin",
        "description": "",
        "composite": true,
        "composites": {
          "realm": [
            "moderator"
          ]
        },
        "clientRole": false,
        "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
        "attributes": {}
      },
      {
        "id": "ceae7639-e341-4c5a-bb9a-e543482384cc",
        "name": "grafanaadmin",
        "description": "Grants Grafana admin privileges on login",
        "composite": false,
        "clientRole": false,
        "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
        "attributes": {}
      },
      {
        "id": "1d536677-7c94-4a55-a939-ac6f9fc6714e",
        "name": "default-roles-shattered realms online",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "public",
            "offline_access",
            "uma_authorization"
          ]
        },
        "clientRole": false,
        "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
        "attributes": {}
      },
      {
        "id": "3bb09c53-791b-40ec-aee7-793eae135607",
        "name": "user",
        "description": "",
        "composite": true,
        "composites": {
          "client": {
            "sro-chat": [
              "chat"
            ],
            "sro-character": [
              "manage"
            ],
            "sro-gamebackend": [
              "connect"
            ],
            "account": [
              "view-consent",
              "manage-account",
              "view-profile",
              "manage-consent"
            ]
          }
        },
        "clientRole": false,
        "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
        "attributes": {}
      },
      {
        "id": "2589fbe9-f68c-4256-b3c8-1c453bd1ec9e",
        "name": "moderator",
        "description": "",
        "composite": true,
        "composites": {
          "realm": [
            "user"
          ]
        },
        "clientRole": false,
        "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
        "attributes": {}
      },
      {
        "id": "e6534680-6eb4-48ca-aeda-b9d771868175",
        "name": "super admin",
        "description": "",
        "composite": true,
        "composites": {
          "realm": [
            "admin"
          ],
          "client": {
            "realm-management": [
              "realm-admin"
            ],
            "sro-gameserver": [
              "uma_protection"
            ],
            "sro-chat": [
              "uma_protection",
              "chat_manage",
              "chat"
            ],
            "grafana": [
              "grafanaadmin"
            ],
            "sro-character": [
              "manage",
              "uma_protection",
              "manage_other",
              "playtime",
              "inventory_manage"
            ],
            "sro-gamebackend": [
              "manage_connections",
              "connect",
              "server_manager",
              "uma_protection",
              "server_statistics"
            ],
            "broker": [
              "read-token"
            ],
            "account": [
              "view-profile",
              "view-applications",
              "view-groups",
              "delete-account",
              "manage-account-links",
              "view-consent",
              "manage-consent",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
        "attributes": {}
      },
      {
        "id": "c2ab1fd4-b20d-4576-8bdb-70a192959fe1",
        "name": "Banned",
        "description": "The user is banned",
        "composite": false,
        "clientRole": false,
        "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
        "attributes": {
          "banned": [
            "true"
          ]
        }
      },
      {
        "id": "b774a013-aca1-4874-b38d-b9a5a18cea54",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c",
        "attributes": {}
      }
    ],
    "client": {
      "oauth2-proxy": [],
      "realm-management": [
        {
          "id": "823450a9-f2dc-4973-9642-eafe07be314f",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "ad20a43f-5588-491f-986a-37a14daba9e0",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "6ee8b608-2ce0-4f7c-b98b-8bc0a6ca1221",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "7eaf68a9-6991-4ca1-839a-a822796b84f7",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "d0adbf13-d00b-49b5-ba5f-ecef4e4cc30b",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "view-realm",
                "manage-authorization",
                "view-identity-providers",
                "impersonation",
                "manage-users",
                "view-events",
                "query-users",
                "query-clients",
                "view-clients",
                "manage-events",
                "query-realms",
                "view-users",
                "manage-identity-providers",
                "manage-clients",
                "view-authorization",
                "manage-realm",
                "create-client"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "0ae63736-4681-400c-a4ee-e8e6283b85e9",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "c596cb63-66b3-4940-932e-21bc03cad1b1",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "cf20d4e9-083d-4fd4-bf56-1f80c80d187f",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "a4209056-ca62-40f2-97cb-644e77413c5d",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "2604150a-2537-4683-9320-3b32520f01fc",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "e77a40bd-aa46-4fa9-815b-f6c91d7ac330",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "0942ff9f-6c05-42e1-9466-37ffd620ea19",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "ebb9c06a-e30e-4ec2-a603-b484a4d7f8ba",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "e9cdfd03-4976-47ea-8eaa-6443a059fa80",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "008b58fa-567b-48e7-affe-fde24149f0a5",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "3b5d55fc-9e99-48d3-aac4-58f89709f0dc",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "1603dd23-4b0d-4657-8b7d-e30fc7136ab1",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "1c4ca27e-37e7-4f50-920c-0055df017d44",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        },
        {
          "id": "b6d1dd97-23cf-4631-bf81-a8a0fc8eac3b",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8abd870-036c-4cb2-b55b-865983a66a02",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "account-console": [],
      "broker": [
        {
          "id": "a6c1095a-dcdb-4600-9517-83fa4e27f5fd",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "051c3227-4123-41d3-8422-388163251684",
          "attributes": {}
        }
      ],
      "sro-gameclient": [],
      "sro-web": [],
      "postman": [],
      "sro-gameserver": [
        {
          "id": "885b3807-0d76-4a38-ac00-b3fe9de30d64",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "23155c1a-e4ae-4e44-90c5-d88a8347b7f9",
          "attributes": {}
        }
      ],
      "grafana": [
        {
          "id": "59bab4ad-4060-4466-9962-a6b51a36cbd5",
          "name": "grafanaadmin",
          "description": "Grants admin privileges in Grafana on login",
          "composite": false,
          "clientRole": true,
          "containerId": "6f57eac5-c90e-42d1-adc1-d609c9be322d",
          "attributes": {}
        }
      ],
      "sro-chat": [
        {
          "id": "b94691e2-e681-47ea-938e-2a55bf2090ea",
          "name": "chat_manage",
          "description": "Allows viewin, creation, editing and deletion of chat channels.",
          "composite": false,
          "clientRole": true,
          "containerId": "4c79d4a0-a3fd-495f-b56e-eea508bb0862",
          "attributes": {}
        },
        {
          "id": "35508fdc-336c-40d7-a5ac-065557fdfe9e",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "4c79d4a0-a3fd-495f-b56e-eea508bb0862",
          "attributes": {}
        },
        {
          "id": "0e522867-e318-4eba-a0af-5d393a318dfe",
          "name": "chat",
          "description": "Allows getting and listening to chat channels and direct messages to  self as well as sending messages on chat channels and to other users. Does not give permissions to a particular channel.",
          "composite": false,
          "clientRole": true,
          "containerId": "4c79d4a0-a3fd-495f-b56e-eea508bb0862",
          "attributes": {}
        }
      ],
      "sro-character": [
        {
          "id": "ddef4e8c-e433-4fb5-bcbf-f28f402f0e8a",
          "name": "manage",
          "description": "Allows creating, reading and deleting of own characters",
          "composite": false,
          "clientRole": true,
          "containerId": "738a426a-da91-4b16-b5fc-92d63a22eb76",
          "attributes": {}
        },
        {
          "id": "baf6db36-a44f-4c3b-9eb3-3b4e6c72be86",
          "name": "playtime",
          "description": "Allows adding playtime to any character",
          "composite": false,
          "clientRole": true,
          "containerId": "738a426a-da91-4b16-b5fc-92d63a22eb76",
          "attributes": {}
        },
        {
          "id": "ff0b40de-4585-4e0b-92e8-146bf9ea1cc6",
          "name": "inventory_manage",
          "description": "Allows getting and updating character inventories",
          "composite": false,
          "clientRole": true,
          "containerId": "738a426a-da91-4b16-b5fc-92d63a22eb76",
          "attributes": {}
        },
        {
          "id": "5b43c71a-bbf2-4988-826e-c9c2555b0408",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "738a426a-da91-4b16-b5fc-92d63a22eb76",
          "attributes": {}
        },
        {
          "id": "17839a87-d046-4f25-856f-41a5fddb663d",
          "name": "manage_other",
          "description": "Allows creating, reading and deleting of any characters",
          "composite": false,
          "clientRole": true,
          "containerId": "738a426a-da91-4b16-b5fc-92d63a22eb76",
          "attributes": {}
        }
      ],
      "admin-cli": [],
      "prometheus": [],
      "sro-gamebackend": [
        {
          "id": "64e43f49-b830-4413-a074-ab892dca094f",
          "name": "server_manager",
          "description": "Allow the use of the server manager service",
          "composite": false,
          "clientRole": true,
          "containerId": "c3cacba8-cd16-4a4f-bc86-367274cb7cb5",
          "attributes": {}
        },
        {
          "id": "e865d59d-a0d8-46d8-a10f-af544749608d",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "c3cacba8-cd16-4a4f-bc86-367274cb7cb5",
          "attributes": {}
        },
        {
          "id": "322e878f-81bd-4955-8e21-cce416fee517",
          "name": "connect",
          "description": "Allows requests to connect to a server",
          "composite": false,
          "clientRole": true,
          "containerId": "c3cacba8-cd16-4a4f-bc86-367274cb7cb5",
          "attributes": {}
        },
        {
          "id": "3c778bf9-62a9-4514-92ac-ca02d7716ce5",
          "name": "manage_connections",
          "description": "Allows verifying and transfering connections",
          "composite": false,
          "clientRole": true,
          "containerId": "c3cacba8-cd16-4a4f-bc86-367274cb7cb5",
          "attributes": {}
        },
        {
          "id": "08c2f287-bc66-44b0-b1d1-43c4572805dd",
          "name": "server_statistics",
          "description": "Allow viewing of gameserver status and statistics",
          "composite": false,
          "clientRole": true,
          "containerId": "c3cacba8-cd16-4a4f-bc86-367274cb7cb5",
          "attributes": {}
        }
      ],
      "kibana": [],
      "account": [
        {
          "id": "5aa7d863-8ed1-4630-89c0-64fa1c9a6958",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "4b73ffda-e4a9-4f1e-8a5d-75a8afdf5757",
          "attributes": {}
        },
        {
          "id": "77637521-ed17-4749-8a69-6a1d4a64c309",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "4b73ffda-e4a9-4f1e-8a5d-75a8afdf5757",
          "attributes": {}
        },
        {
          "id": "1169df8e-e22e-49cc-a7a4-0dce07636d89",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "4b73ffda-e4a9-4f1e-8a5d-75a8afdf5757",
          "attributes": {}
        },
        {
          "id": "b204e866-5f84-4bd7-bf87-c773a6026c5e",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "4b73ffda-e4a9-4f1e-8a5d-75a8afdf5757",
          "attributes": {}
        },
        {
          "id": "81303a90-c8aa-464e-b623-5f55e99a0a36",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "4b73ffda-e4a9-4f1e-8a5d-75a8afdf5757",
          "attributes": {}
        },
        {
          "id": "4a72c625-6503-474b-8a28-69dcb2c34395",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "4b73ffda-e4a9-4f1e-8a5d-75a8afdf5757",
          "attributes": {}
        },
        {
          "id": "5180fd95-9cb9-4b31-a445-89b6ab69f977",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "4b73ffda-e4a9-4f1e-8a5d-75a8afdf5757",
          "attributes": {}
        },
        {
          "id": "777e8cfe-af89-4557-a0ea-c943877a0ab1",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "4b73ffda-e4a9-4f1e-8a5d-75a8afdf5757",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "1d536677-7c94-4a55-a939-ac6f9fc6714e",
    "name": "default-roles-shattered realms online",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "86a3494f-f9b9-4407-8a3b-7e82a89bdf7c"
  },
  "requiredCredentials": [
    "password"
  ],
  "passwordPolicy": "length(8) and notUsername(undefined) and notEmail(undefined) and specialChars(1) and upperCase(1) and lowerCase(1) and digits(1) and maxLength(64)",
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppGoogleName",
    "totpAppFreeOTPName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "daa806c6-4559-45c5-9053-f4ba3c379841",
      "createdTimestamp": 1679327408185,
      "username": "service-account-grafana",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "grafana",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-shattered realms online"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "1efee3c4-6770-4194-91c2-ddd72285a588",
      "createdTimestamp": 1679355930851,
      "username": "service-account-kibana",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "kibana",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-shattered realms online"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "6713a953-1f77-461e-ace3-cf7dbc4f09c5",
      "createdTimestamp": 1679344938107,
      "username": "service-account-prometheus",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "prometheus",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "grafanaadmin",
        "default-roles-shattered realms online",
        "super admin"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "17c36f56-4c37-4afd-a5e0-844944ae2616",
      "createdTimestamp": 1678132985919,
      "username": "service-account-sro-character",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sro-character",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-shattered realms online",
        "super admin"
      ],
      "clientRoles": {
        "sro-character": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "713aad16-d202-4c49-848b-a8cb389e71c6",
      "createdTimestamp": 1678132892896,
      "username": "service-account-sro-chat",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sro-chat",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-shattered realms online",
        "super admin"
      ],
      "clientRoles": {
        "sro-chat": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "01ccefb0-053d-490a-a33e-bc8b4ef3219d",
      "createdTimestamp": 1678133755854,
      "username": "service-account-sro-gamebackend",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sro-gamebackend",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-shattered realms online",
        "super admin"
      ],
      "clientRoles": {
        "sro-gamebackend": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "4d0bb92f-2ee5-4ca1-9a34-0843516fff64",
      "createdTimestamp": 1689291374518,
      "username": "service-account-sro-gameserver",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sro-gameserver",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-shattered realms online"
      ],
      "clientRoles": {
        "sro-gameserver": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "4b73ffda-e4a9-4f1e-8a5d-75a8afdf5757",
      "clientId": "account",
      "name": "${client_account}",
      "description": "",
      "rootUrl": "${authBaseUrl}",
      "adminUrl": "",
      "baseUrl": "/realms/default/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/default/account/*",
        "/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "oauth2",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d2fdcdd1-3c83-4674-ab40-523d74345d58",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "description": "",
      "rootUrl": "${authBaseUrl}",
      "adminUrl": "",
      "baseUrl": "/realms/default/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/default/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "pkce.code.challenge.method": "S256",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "6923eae1-08fb-4aa2-a50c-9493c0b452a5",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4b636a58-22a9-44b5-a275-909bf27769f9",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "051c3227-4123-41d3-8422-388163251684",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6f57eac5-c90e-42d1-adc1-d609c9be322d",
      "clientId": "grafana",
      "name": "Grafana",
      "description": "Grafana Dashboard",
      "rootUrl": "https://grafana.shatteredrealmsonline.com",
      "adminUrl": "https://grafana.shatteredrealmsonline.com",
      "baseUrl": "https://grafana.shatteredrealmsonline.com",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1679327408",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "6da4e84d-3124-42e2-8858-7065153c87eb",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f3625bdc-04f8-4656-a2b1-0b288eef1ebe",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4d849e6d-e44d-480f-af76-475d45671fc7",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4a65527a-5d88-4433-8d69-e91ab43d1504",
      "clientId": "kibana",
      "name": "Kibana",
      "description": "ECK stack",
      "rootUrl": "https://kibana.shatteredrealmsonline.com",
      "adminUrl": "https://kibana.shatteredrealmsonline.com",
      "baseUrl": "https://kibana.shatteredrealmsonline.com",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1679355930",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "jwt.credential.certificate": "MIICmzCCAYMCBgGHAWpU4TANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZraWJhbmEwHhcNMjMwMzIwMjM0NDE4WhcNMzMwMzIwMjM0NTU4WjARMQ8wDQYDVQQDDAZraWJhbmEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDNER73GwYZaMQBeUwvU6IEsaNU2vg3GlHgYEK8uTZsuRu2LqCSpVKXNNs9eB1I/OUxhwC/fd7iTRkVl2LHAsR4eQIDllisuhGwcM8P5HnKw9lVpsovs2gi9SfpVbxKA0CM5REcrUw4xj/FevawnGaFqHmjHHvN+l+ynfVn5RVX4gTxtE7rzN3/RUf8fkdcLiVEUiY9p+9d4MZWTGB7LFrrhrLRck4CbdQRvjN1hWaSJGMIXEBt1nK03RrqB0UgOEmVXs//ZUlsTc+iP3altP5iObCtt1DFSsulqcgfAkvICVZAPWMnpoF6mL2TBxS8w+U1mvyqRdeIz1xQFjr+i81RAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGrkLCm4w1hT4BcwpNfMgUwFPxj20aQwJF8bjE9doHXtxpBB5AyaogqzEhQHcHpKlUp9YiWtzSGgZFaHjc/b0w80SZhtqxYvCX+6P/6xEhKi9IC1WfeCWMUy170J16WDjTVz/XnkUrGrS5jU9WkJbkEPIG1ALhOPrUDo4KlvpZeVBZyTJpRPBc4cBrRQzu5laUidWopv7D7h7C658If+1HOmRJLy1vHDjY39LrVO6+RixoG1ELeifDgEyQNKZuD79c8tNn/FnhOEP3xK3iHsPlFfcLgcxP8lU6B52JPpruTnYncKygl+QeHSgbktCI+UjRvetLqsaABqWEJM8o6+4og="
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "25791f7a-8354-4d62-86e1-4dd997fca934",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d645d480-fc06-4fa2-b483-54a935c07c2d",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "35d0012a-3d22-49c7-a3bf-2aaff2cf47a0",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "oauth2",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0187b195-e507-4186-912b-dcea0b2908f7",
      "clientId": "oauth2-proxy",
      "name": "OAuth2 Proxy",
      "description": "",
      "rootUrl": "https://api.shatteredrealmsonline.com/",
      "adminUrl": "",
      "baseUrl": "https://api.shatteredrealmsonline.com/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://api.shatteredrealmsonline.com/*",
        "https://prometheus.shatteredrealmsonline.com/*",
        "https://shatteredrealmsonline.com/*",
        "/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1678112488",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "jwt.credential.certificate": "MIICpzCCAY8CBgGGuJJoijANBgkqhkiG9w0BAQsFADAXMRUwEwYDVQQDDAxvYXV0aDItcHJveHkwHhcNMjMwMzA2MjAxNTQ4WhcNMzMwMzA2MjAxNzI4WjAXMRUwEwYDVQQDDAxvYXV0aDItcHJveHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDtBldEUaVbA39yAYaNPXqDjBhvy3Gt/KbaogV7mk2wq7IF92AEzUPwQrnNav4RUDnlUj1vH+O+LYthA35E+o0OQXR4owLuA1WrFOfIibY9RCq5Q8jskb7Sq5YWWjoGnUb2HonUTc+a6GVfrhKvsvhidLHJgyLp1QPPTudB5J9ckj66Bbo3vZAiUWlbUeQONcTyhj/5A42rFlHo/IKajAuxxJ2fmQb8xyNkvEGn1BPEAWAu7e5F2XNmI31rH+whL+s+S5grITgTbi3GidCqvggXrANev296dnD94AHuBrsiofoTa/dRY1Mh6/xm4BLm6668vBX+Cm/WcSmcT5Kd+vyFAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJIcz+EKkZJcAIcsbdTMwUfC0i0SRsBbpa6k9OIoK8zsdy/UvPZX2ffNzTOno53hEejSBF3vypBNj8/N7NKphI2NeMujW2Ze7P7/5HaT14Cfye+hw9rtdwoTheCoCggbGU/dlLLLXgsOb5u9Qp2zxTm7/hGz9PQoVZ1MC2ygGlf2OekLATc4eQnrayFE2QPPXFVcj89Skxy1Xd/neyWenIodiQXDqHzdRsij+dgF/qY7mqglf6aDvPCQxChgsUdwPFjTHUEIn4BWt3PnYreY9FCp0DDdawg3Vo8TnS/fSY+UQIo1J2u4GEykQS+lFEJI8hohlM9y8SXgS0wkD54nbNs="
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "00e452f8-8e3a-4de7-98f2-7e3b14587e09",
          "name": "self aud",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "oauth2-proxy",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "userinfo.token.claim": "false"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0880157f-b060-42aa-8004-841ff19f535e",
      "clientId": "postman",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1679088900",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "*",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "jwt.credential.certificate": "MIICnTCCAYUCBgGG8YB+ATANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdwb3N0bWFuMB4XDTIzMDMxNzIxMzQzNVoXDTMzMDMxNzIxMzYxNVowEjEQMA4GA1UEAwwHcG9zdG1hbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJyLyOv1A/LmMwcWKKD4FyMMu1nsS+oV0v8fYAXxtKcEnBUT9qSZp4whAiM2mpswV9GK+bHb4FrVh/43T6trMVD6tsbQnHSn459LUuFeTFZv0oGIMywMYaTp1w1a4y0dMPjNooEJ6nkqUnLD0Tj6nc+lyi84jsFTmRkWxbs3A5RbtbcJS0+eJGrdfbTucLk6C4oe3c1H6ccrz4nZ9FgoXm7krV5qVt7GfEezU7YPffe8VrfmEodpuHp2L4F0T+ZZYf+K/SSEmgkWkZq+SSLQOJekKl5N6ivYb3FP+iKLpAQppplwy2hT56ZEBQFwyML/nNXBhLvy4MztyiA3IdcUddUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAWBGZS9Xi3sCOqX6g+e69vPuy5C4X5elGX2Pnn4dPno7OdhrjcwnWi/VUswG5xNrSHgZwWoe80iI3rfskV5nC80BeV1oL5SjpZVh7lWkiNwEJvmOJt0fiHGAvEeKGDow6mTcvT4lrBib5+ECa+QVr6wYM/lxQKSjI/xj5m5mVBJ54NCSZTuq7OhjNa+PXRMtxq4I9bjuxZePpMwWl1QVJzwcrZBBCTUBmOpNEUuQcY+bhQeFxwCWPmGYQ1iPSdYrYJHrkBoP+sMESnUsBBqhW/tVWJd5yBGSkGJxH+zQlIz/oJ6dNldm0BDK0q98H3sOj5dp9bEpFJvecj8OV8T0t1w=="
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "41511570-086c-4163-89ba-9f1a5cedcd9a",
      "clientId": "prometheus",
      "name": "Prometheus",
      "description": "Prometheus client",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://*.shatteredrealmsonline.com/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1679344938",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "377556a6-6be3-46b4-9ce3-d971135a7a59",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d3a8c659-a1a7-48b6-9ab4-bb435595a67b",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fff43968-a8f6-4180-bbba-95ff28c18384",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "oauth2",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f8abd870-036c-4cb2-b55b-865983a66a02",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "76fff154-495e-423b-b7b9-414c5a5a3397",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/default/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/default/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "b34da145-1ca2-43bd-b476-44ec1984e351",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "738a426a-da91-4b16-b5fc-92d63a22eb76",
      "clientId": "sro-character",
      "name": "Shattered Realms Online Characters",
      "description": "The Shattered Realms Online backend character service",
      "rootUrl": "http://localhost:8081",
      "adminUrl": "http://localhost:8081",
      "baseUrl": "http://localhost:8081",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1678132985",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "jwt.credential.certificate": "MIICqzCCAZMCBgGGuIW63DANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5zcm8tY2hhcmFjdGVyczAeFw0yMzAzMDYyMDAxNTdaFw0zMzAzMDYyMDAzMzdaMBkxFzAVBgNVBAMMDnNyby1jaGFyYWN0ZXJzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlzo9+NOtgfNKDCUzxA1DEKaqxggDhWjDBtN6IrC9qITL0U7OxbQI8EqYPMZcxVr6ZVFQYuY4ziHjADWbPB4ZXGmvSCj1i2YzNyU6zg0Hcd3CcOzbhlrUXJriMvPElcDZBCvy8Urmx6PotSTL8+vp34zk/4aJt98uw2Q8Ti8xCBfylHSj9MfX0+PJMQZV/0FvPiniND3MVzoVcTQmxuuVMukSGq1cAXQ4rsOFX+d9WmFrhobL2GeOvw8EJtI9+NPIlXSqop2IcYLRsLBa09Xr/2XiY5iO/eRxvvxy0FMF0vpIzaXKZFlzO3o/XR07foe9h8XeXHK9Z5zbeoAAO1II2wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAziowfRgTFVM3i5qOwColGv/X10QrGZC6EM1HqRK58mobfsTLU631E2KmZbEUAXAW3nmT0KADZ8p46xlQU5Aazdrtvd2ADuvYCq/5osyz97vtcmP4rVyA+9pcI3qA2WIAoUfLP1gthygIMFImHRiIsL9KuKX81QTF1QFGGzScrTb8hur6+wCQXKPQZodfOFw2WU8UNfTMNbMaox8oaZxLNFfZP6vID3gyD7g4qwKYsN8mDRAlMZjnk369Sv2hdz+L5IGq9oGGKdHC2d9PTWgDmleFPKDlPzuinLCcYqjTyPAIH64cxh2Wc38+GX+Yn3vU6WsGfDtADIblAxqNqC0KI"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "2755466f-ab5a-4ba4-a024-e0f2c38eb969",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c7a2b231-6b26-45db-bd10-f4c9e322af49",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4dc0946d-3c81-4e2b-bc25-19e141f7421f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "oauth2",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4c79d4a0-a3fd-495f-b56e-eea508bb0862",
      "clientId": "sro-chat",
      "name": "Shattered Realms Online Chat",
      "description": "The Shattered Realms Online chat backend service. Handles sending messages between players and on chat channels.",
      "rootUrl": "http://localhost:8180",
      "adminUrl": "http://localhost:8180",
      "baseUrl": "http://localhost:8180",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1678132892",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "jwt.credential.certificate": "MIICnzCCAYcCBgGGuIYBsTANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhzcm8tY2hhdDAeFw0yMzAzMDYyMDAyMTVaFw0zMzAzMDYyMDAzNTVaMBMxETAPBgNVBAMMCHNyby1jaGF0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArkMWaBZvIwwgWKZemm7vx041VrvjwuDOeuGEq4Fmbh/uf+RWzAL6NhcO/9ghVX2gupW6jdoIoptKjWJBtu5HiNKkFqRRnhRSSEEXDsKqX0+AOnwmF9QjHJk+tTmtvVeWv2lqJxk3TPvPsBhidMSwQVVJC46/hzovQwka3kSeUYjoqXfdIKfNvKlCv7j4fhnixNKgxQRAoK7VQ4vu190NnxkIE36fwO6xpPZjxmiQRGO9A/svPCKXktrpLCM56QC0ONwnsMDqpQpXQoK6PhcjmMwIK1TdRKv5XDc8JqV4HDGECeTap234dKWAedCq4NF+cPasT4asR7zhGYQaDvqnyQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCEq6KfcCiwgQOvZDV/81VrBthaeZuN2wlpnMtB+Os5C4grYWUWlFyNcwuQr1fFwMNzgWjpnyqP6RQ6tAEki06Tn2n+kw+DqG6pK2zR9bnL9Le+38MT84CF6gqugO0zc7ay5x5U1RKzLkqpF1kLcM8CazcvNgXkO+fRzuvE8Iujzv8frGcI6l7EFW9UQbSIZc7zbAQHpgMuXP6iUyu/KSdGpy2KS1SzFZ2bpwDFIGkm7KD09f7mb4S4J7M0hbVtSdmfvkqpDgrJJ+axwmrW3gjcjmJLw3wvA7xgZQzCT+Mp9+qEqlpcdyMYFk/htsjq2/am+F1bvKVsC84l6dJn7+Qx"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "6a27b4ee-b029-439c-9e83-6bb850b311ff",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f080b0af-b468-47a4-a3d0-6300d73ab8bd",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4b584b40-7544-475d-8d10-99254257df0d",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "oauth2",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c3cacba8-cd16-4a4f-bc86-367274cb7cb5",
      "clientId": "sro-gamebackend",
      "name": "Shattered Realms Online Game Backend",
      "description": "The Shattered Realms Online game backend service",
      "rootUrl": "http://localhost:8082",
      "adminUrl": "http://localhost:8082",
      "baseUrl": "http://localhost:8082",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1678133755",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "9d5be374-1047-4a2e-92a2-7502a93e91d0",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6a71dcca-bdf9-41a2-9771-913015057a7d",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cee79fce-cb4c-40c3-94b0-627a2a30ee8a",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "oauth2",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "23e8b533-82c7-46f5-b60e-edef56b50a7f",
      "clientId": "sro-gameclient",
      "name": "Default Shattered Realms Online Game Client",
      "description": "",
      "rootUrl": "http://localhost",
      "adminUrl": "",
      "baseUrl": "http://localhost",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "*",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "oauth2",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "23155c1a-e4ae-4e44-90c5-d88a8347b7f9",
      "clientId": "sro-gameserver",
      "name": "Default Shattered Realms Online Game Server",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1689291374",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "2dde59ed-3f81-47c6-931e-4c1cf3e2d28b",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8c0355b3-6a8b-4110-830c-8cbcf47a5cc1",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5459fa9d-8690-40ad-8c20-cf78160f70f2",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "oauth2",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e7970593-5e7f-4942-9841-518f416e08aa",
      "clientId": "sro-web",
      "name": "Shattered Realms Online Website",
      "description": "The Shattered Realms Online website",
      "rootUrl": "https://localhost:4200",
      "adminUrl": "https://localhost:4200",
      "baseUrl": "https://localhost:4200",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*",
        "/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1678842815",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "oauth2",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "2d485c29-0004-4b80-a890-9fe85c7102f2",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "da9e4384-5f32-4f5d-89de-cbead6d65530",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3137dd90-9cf7-4f3b-8f77-3ed0dbb974c7",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "74277ce1-7a05-4b30-b561-ee04991a8c53",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "00b57cdc-a81f-4e7b-aba4-f08c2f5ede3e",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "ffbc826c-805c-456e-89a6-091dd70db8df",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "34a9cb6a-d0f5-43d3-9f4e-ac459407f84d",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "27ba7415-9442-440b-b482-aaf73ea547d7",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "120b8ea5-4e60-49d0-964e-06562954ea64",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "05984a01-dd2f-4cb3-b6df-1edc0a048e39",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "511bed49-fe01-4eb4-899a-b5cd7dbd465f",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "004d84ae-26c2-4821-90b0-1924c493cab3",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f56728f4-f6b7-4f3e-8515-bbe029472fe9",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "37db3988-30f8-4580-92f4-8a98163490bb",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d89105a2-179f-4771-a277-251dfca0b300",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "35f6178c-d8dd-4d36-8473-18b1afbc64ef",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "1215be32-f96f-419e-928e-52a54bb6b5fd",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "28a9ad9c-28ea-4056-bae6-d545c2542767",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "860c611c-7ed9-49ba-850e-f54214c4f44a",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8553d75d-9457-4f69-9cec-440a7aed17d7",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "7397807c-7ed3-489d-81a9-93bc916b0961",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "d1eb2f49-63a3-4c9d-a04f-4dc9134fd75a",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c81d6939-b831-464f-bb49-0466efac9697",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "bd89e574-42f6-476b-8b09-da6a145638f2",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "0391cdd0-cef9-44fb-b118-0bf218098ba0",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "a9a34e21-68bc-4b75-9fdb-25f3d3924735",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0a6356c3-f9a1-449b-a419-59e1b7d84d5a",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "0e046177-6128-468f-b345-db7b7513593b",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "dbb94b96-10f0-4f99-add3-a1069003e525",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "451dd1da-d2d7-4970-ae2a-d3ae401efdd9",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "f2c74828-3ad6-46cf-9371-f144c8ad2f44",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "25a993f2-765a-4a63-8e19-280335f2d00c",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "ddc5bd49-b7e4-4d5f-9930-a52ac7cb1f35",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "aef6e4f7-f8c5-4b76-85d2-ad851fcd6e04",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "6d68fd92-a525-457a-aa88-c0f1b65d5ff7",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "fb4b91bc-0503-461f-81be-54325aea7bee",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "467a4fb8-21bb-4731-975d-7e7ba9ecaf66",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "6c08b1c6-eb6e-4707-a25a-7141c38d8e0c",
      "name": "oauth2",
      "description": "Addes the oauth2 audience to the token scope to allow for verification",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false",
        "gui.order": "",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "ca602a49-aa81-4094-bd5d-2231bf4a2e5a",
          "name": "oauth2 aud",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "oauth2-proxy",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "userinfo.token.claim": "false"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "oauth2"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {
    "replyToDisplayName": "No Reply",
    "starttls": "true",
    "auth": "true",
    "envelopeFrom": "",
    "ssl": "false",
    "password": "**********",
    "port": "587",
    "host": "smtp.office365.com",
    "replyTo": "no-reply@shatteredrealmsonline.com",
    "from": "no-reply@shatteredrealmsonline.com",
    "fromDisplayName": "Shattered Realms Online",
    "user": "admin@shatteredrealmsonline.com"
  },
  "loginTheme": "keycloak",
  "accountTheme": "keycloak.v2",
  "adminTheme": "keycloak.v2",
  "emailTheme": "keycloak",
  "eventsEnabled": true,
  "eventsExpiration": 2592000,
  "eventsListeners": [
    "jboss-logging",
    "email"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": true,
  "identityProviders": [
    {
      "alias": "google",
      "internalId": "e19b580b-aad9-4093-b65b-11f779575743",
      "providerId": "google",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": true,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "false",
        "offlineAccess": "false",
        "acceptsPromptNoneForwardFromClient": "false",
        "clientId": "262305281602-okdhfm8gbk3cr5q1kb9ghetui1lrg5r2.apps.googleusercontent.com",
        "disableUserInfo": "false",
        "syncMode": "IMPORT",
        "userIp": "true",
        "clientSecret": "**********"
      }
    }
  ],
  "identityProviderMappers": [
    {
      "id": "e83779a4-447f-41e6-a0dc-ce1cb179ebc7",
      "name": "Last Name",
      "identityProviderAlias": "google",
      "identityProviderMapper": "google-user-attribute-mapper",
      "config": {
        "syncMode": "INHERIT",
        "jsonField": "family_name",
        "userAttribute": "lastName"
      }
    },
    {
      "id": "5c587651-7efe-4e08-9285-13b58f588761",
      "name": "Email",
      "identityProviderAlias": "google",
      "identityProviderMapper": "google-user-attribute-mapper",
      "config": {
        "syncMode": "INHERIT",
        "jsonField": "email",
        "userAttribute": "email"
      }
    },
    {
      "id": "9ddd2b51-55c1-405b-8512-e963d13ed768",
      "name": "Username",
      "identityProviderAlias": "google",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": ".${CLAIM.email | localpart }",
        "syncMode": "IMPORT",
        "jsonField": "email",
        "target": "LOCAL"
      }
    },
    {
      "id": "d9a102f2-43d5-4a58-86fb-b02d1e2747c8",
      "name": "First Name",
      "identityProviderAlias": "google",
      "identityProviderMapper": "google-user-attribute-mapper",
      "config": {
        "syncMode": "INHERIT",
        "jsonField": "given_name",
        "userAttribute": "firstName"
      }
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "59934a37-44ad-48dd-b308-b0c7ae5ac554",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "10070766-be69-4ec4-90bd-1ba8ad56b121",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "8a028f1d-9113-419c-92b2-f52896e1ace6",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "c8ff0e92-fee7-4482-b240-e009664862cd",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "23434041-6a9c-404a-a406-30c7eb13053a",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "8388e2e7-c69e-41e4-95cd-62818f4718b1",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "816c66b6-7f16-46eb-a2a8-37bf74bfb2b9",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "fc2bc21f-edd0-4bb3-af09-23da174dc3e3",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "b3fd97a3-b32c-47ea-b7f6-81ae22057bea",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "bca28cef-4060-4779-ac2b-69dfe7bc841b",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "2264471b-36c3-4d9c-b134-23d3daadc4dc",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "be68e014-82f7-4922-8087-e7547ca4de2c",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "e5624808-f8ac-4be4-b063-33a13081a5fa",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "e30710fd-cb54-45b3-8cde-1d40d8f1c872",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e64acca4-3a96-4c08-9ab4-6bda3e2d9a27",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bf81bdfc-3d11-470b-8f21-30dbed334765",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8a07dab9-b78c-4d14-a5ee-b26159312a5b",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1f57b838-fca2-4a8d-a9df-df63f6abcf0e",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "927df7c9-1099-46c7-8697-0335ab66fe45",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "75ab0fd1-432b-4ead-861e-98dd6ed8b38f",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cd2c2d47-23ad-4600-b8cf-130f8a2cdaea",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cdf822f3-7680-4520-85bb-a3bed13c8224",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "320335bd-97b0-4a88-b3ee-1d909d6303e6",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c571ffd4-07d3-4008-807a-5a010a485e64",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5ced5623-f294-4757-9261-cedf0a61896a",
      "alias": "custom first broker login ",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "custom first broker login  User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0f444a90-22d6-4265-9d59-f6e26546135b",
      "alias": "custom first broker login  Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "custom first broker login  Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0f3f43dc-3667-42e5-8294-4b198c7f0c88",
      "alias": "custom first broker login  First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fc51737c-3653-4afc-9bfe-c55490099da8",
      "alias": "custom first broker login  Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "custom first broker login  Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0afbf2ca-bf7b-4bf8-83c9-df1cec6f9fdd",
      "alias": "custom first broker login  User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-change-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "DISABLED",
          "priority": 21,
          "autheticatorFlow": true,
          "flowAlias": "custom first broker login  Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "17a74972-5fc4-4afd-89d8-ffdc790cd54a",
      "alias": "custom first broker login  Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "custom first broker login  First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8d5d907d-49fe-4610-801a-99faae823198",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "93428d64-20c1-4559-afbc-0b4060ebc120",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cab314a6-0751-443f-a3bf-9c33eea74920",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a1e5d3f0-503e-4ff2-94b5-61885c9043f9",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c9a2f103-6b57-4d16-a6bf-f1974eeae65e",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "272ce523-8776-41a3-ba02-43eda1cbd23a",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e4486c3f-25f9-486d-93e7-753173d29491",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "google recpatcha",
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "10b6778f-ddd8-4781-ae79-1679d2305181",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5a855130-2c86-456a-a09b-b3e2e55f65b3",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "6f291273-1b4f-4dcf-b302-2ad5f3274528",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "21d233cd-a1f4-4bfd-bd2e-85b14637e8bd",
      "alias": "google recpatcha",
      "config": {
        "useRecaptchaNet": "false"
      }
    },
    {
      "id": "2d21daec-812d-4650-a684-583f6e6b7517",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    },
    {
      "alias": "change-username",
      "name": "Change Username",
      "providerId": "change-username",
      "enabled": true,
      "defaultAction": false,
      "priority": 1001,
      "config": {}
    },
    {
      "alias": "NEW_USERNAME",
      "name": "Set Username",
      "providerId": "NEW_USERNAME",
      "enabled": true,
      "defaultAction": false,
      "priority": 1002,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 1003,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "userProfileEnabled": "true",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "acr.loa.map": "{}",
    "adminEventsExpiration": "7776000"
  },
  "keycloakVersion": "21.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
